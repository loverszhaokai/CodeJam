






































* Problem C. Minesweeper Master


** Problem

Minesweeper is a computer game that became popular in the 1980s, and is still 
included in some versions of the Microsoft Windows operating system. This 
problem has a similar idea, but it does not assume you have played Minesweeper. 

*** In this problem, you are playing a game on _a grid of identical cells_. 

*** The content of each cell is _initially hidden_. 

*** There are _M_ mines hidden in _M different cells_ of the grid.
 No other cells contain mines. 

*** You may click on _any_ cell to reveal it. 

*** If the revealed cell _contains a mine_, then the game is _over_, and you _lose_.

*** Otherwise, the revealed cell will contain a digit between 0 and 8,
inclusive, which corresponds to the number of neighboring cells that contain mines.

**** _Two cells are neighbors if they share a corner or an edge_. 

**** Additionally, if the revealed cell contains a _0_
_then all of the neighbors of the revealed cell are automatically revealed as well, recursively_. 

*** When _all the cells that don't contain mines have been revealed_
the game _ends_, and you _win_. 

*** For example, an initial configuration of the board may look like this
('*' denotes a mine, and '_c_' is the first clicked cell): 


*..*...**.
....*.....
..c..*....
........*.
..........

There are _no mines adjacent to the clicked cell_, so when it is revealed, it 
becomes a _0_, and _its 8 adjacent cells are revealed as well_. 

This process continues, resulting in the following board: 

*..*...**.
1112*.....
00012*....
00001111*.
00000001..

At this point, there are still _un-revealed cells_ that _do not contain mines_ 
(denoted by '.' characters), so the player has to click again in order to continue the game. 

*** You want to win the game as quickly as possible. 
There is nothing quicker than winning in one click. 

**** Given the size of the board _(R x C)_ and the number of hidden mines _M_, 

**** _is it possible (however unlikely) to win in one click?_ 

**** _You may choose where you click_.

**** If it is possible, then print any valid mine configuration
and the coordinates of your click, following the specifications in the Output section. 
Otherwise, print "Impossible". 


** Input

The first line of the input gives the number of test cases, T. 
T lines follow. 

*** Each line contains three space-separated integers: R, C, and M. 


** Output

For each test case, output a line containing "Case #x:", 
where x is the test case number (starting from 1). 

On the following R lines, output the board configuration with C characters per line, 
using '.' to represent an empty cell, 
'*' to represent a cell that contains a mine, 
and 'c' to represent the clicked cell. 

If there is no possible configuration, then instead of the grid, output a line 
with "Impossible" instead. 

*** If there are multiple possible configurations, output _any one of them_.

** Limits

0 ≤ M < R * C.


*** small

1 ≤ T ≤ 230.
1 ≤ R, C ≤ 5.


*** large

1 ≤ T ≤ 140.
1 ≤ R, C ≤ 50.



** Sample

*** Input

5
5 5 23
3 1 1
2 2 1
4 7 3
10 10 82


*** Output

Case #1:
Impossible
Case #2:
c
.
*
Case #3:
Impossible
Case #4:
......*
.c....*
.......
..*....
Case #5:
**********
**********
**********
****....**
***.....**
***.c...**
***....***
**********
**********
**********


