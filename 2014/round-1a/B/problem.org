* Problem B. Full Binary Tree


** Problem

A tree is a connected graph with no cycles. 

A  _rooted tree_  is a tree in which one special vertex is called the root. 

If there is an edge between X and Y in a  _rooted tree_ 
we say that Y is a  _child_  of X if X is  _closer to the root_  than Y 
(in other words, the shortest path from the root to X is shorter than the shortest path from the root to Y). 


A  _full binary tree_  is a  

	_rooted tree_  
	every node has either exactly  _2_  children or  _0_  children. 


You are given a tree  _G_  with  _N_  nodes (numbered from 1 to N). 
	
	You are allowed to  _delete_  some of the nodes. 
		
		When a node is deleted,  _the edges connected to the deleted node are also deleted_ 

	Your task is to  _delete as few nodes as possible_  so that the  _remaining nodes_  form a
	_full binary tree_  for  _some choice of the root from the remaining nodes_ 


** Input

The first line of the input gives the number of test cases, T. 
T test cases follow. 

The first line of each test case contains a single integer  _N_, 
the number of nodes in the tree. 

The following  _N-1_  lines each one will contain two space-separated integers:
 Xi Yi, indicating that G contains an undirected edge between Xi and Yi. 


** Output

For each test case, output one line containing "Case #x: y", 
where x is the test case number (starting from 1) and 

y is the  _minimum number of nodes to delete from G to make a full binary tree_ 


** Limits

1 ≤ T ≤ 100.
1 ≤ Xi, Yi ≤ N

Each test case will form a valid connected tree. 


*** Small dataset

2 ≤ N ≤ 15.


*** Large dataset

2 ≤ N ≤ 1000.

** Sample


*** Input

3

3
2 1
1 3

7
4 5
4 2
1 2
3 1
6 4
3 7

4
1 2
2 3
3 4


*** Output

Case #1: 0
Case #2: 2
Case #3: 1


In the first case, G is already a full binary tree 
(if we consider node 1 as the root), so we don't need to do anything. 

In the second case, we may delete nodes 3 and 7; 
then 2 can be the root of a full binary tree. 

In the third case, we may delete node 1; 
then 3 will become the root of a full binary tree 
(we could also have deleted node 4; then we could have made 2 the root).

